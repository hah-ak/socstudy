//import org.springframework.aot.gradle.dsl.AotMode

plugins {
    id 'org.springframework.boot' version '2.5.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
//    id 'org.springframework.experimental.aot' version '0.10.2'
//    id 'org.graalvm.buildtools.native' version '0.9.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    maven { url 'https://repo.spring.io/release' }
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    implementation 'org.springframework.boot:spring-boot-starter-rsocket'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-aop:2.5.3'
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.apache.tomcat.embed', module: 'tomcat-embed-core'
        exclude group: 'org.apache.tomcat.embed', module: 'tomcat-embed-websocket'
    }
    implementation "org.apache.tomcat.experimental:tomcat-embed-programmatic:${dependencyManagement.importedProperties["tomcat.version"]}"
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.session:spring-session-jdbc'
    implementation('org.springframework.boot:spring-boot-starter-actuator') {
        exclude group: 'io.micrometer', module: 'micrometer-core'
    }
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.batch:spring-batch-test'
    implementation 'com.google.api-client:google-api-client:1.32.2'
    implementation('com.google.auth:google-auth-library-oauth2-http:1.3.0')
    implementation('com.google.apis:google-api-services-chat:v1-rev20211117-1.32.1')
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-mongodb
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-mongodb', version: '2.5.3'

}

test {
    useJUnitPlatform()
}

bootBuildImage {
    builder = 'paketobuildpacks/builder:tiny'
    environment = ['BP_NATIVE_IMAGE': 'true']
}
//
//nativeBuild {
////    classpath(processAotResources.outputs, compileAotJava.outputs)
//    classpath "$buildDir/resources/aot", "$buildDir/classes/java/aot"
//}
//nativeTest {
//    classpath(processAotTestResources.outputs, compileAotTestJava.outputs)
//}
//
//springAot {
//    mode = AotMode.NATIVE
//    debugVerify = false
//    removeXmlSupport = true
//    removeSpelSupport = false
//    removeYamlSupport = false
//    removeJmxSupport = true
//    verify = true
//    removeUnusedConfig = true
//    failOnMissingSelectorHint = true
//    buildTimePropertiesMatchIfMissing = true
//}
